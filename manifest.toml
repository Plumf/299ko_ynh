packaging_format = 2

id = "299ko"
name = "299ko CMS"
description.en = "299ko is a CMS with a single user. It is lightweight and does not require a database."
description.fr = "299ko est un CMS doté d'un⋅e utilisateur⋅ice unique. Il se veut léger et ne nécessite pas de base de donnée"

version = "1.2.5~ynh1"

maintainers = ["Plumf"]

[upstream]
# NB: Only the "license" key is mandatory. Remove entries for which there's no relevant data
license = "free"
website = "https://299ko.ovh/"
admindoc = "https://yunohost.org/packaging_apps"
userdoc = "https://yunohost.org/apps"
code = "https://github.com/299Ko/299ko"

[integration]
yunohost = ">= 11.1.21"
# FIXME: can be replaced by a list of supported archs using the dpkg --print-architecture nomenclature (amd64/i386/armhf/arm64), for example: ["amd64", "i386"]
architectures = "all"
multi_instance = true
# FIXME: replace with true, false, or "not_relevant". Not to confuse with the "sso" key: the "ldap" key corresponds to wether or not a user *can* login on the app using its YunoHost credentials.
ldap = "not_relevant"
# FIXME: replace with true, false, or "not_relevant". Not to confuse with the "ldap" key: the "sso" key corresponds to wether or not a user is *automatically logged-in* on the app when logged-in on the YunoHost portal.
sso = "not_relevant"
# FIXME: replace with an **estimate** minimum disk and RAM requirements. e.g. 20M, 400M, 1G...
disk = "50M"
ram.build = "50M"
ram.runtime = "50M"

[install]
    [install.domain]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "domain"

    [install.path]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "path"
    default = "/example"

    [install.init_main_permission]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    # This won't be saved as setting and will instead be used to initialize the SSOwat permission
    type = "group"
    default = "visitors"

    [install.language]
    ask.en = "Choose the application language"
    ask.fr = "Choisissez la langue de l'application"
    type = "select"
    choices = ["fr", "en"]
    default = "fr"

    [install.admin]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "user"

    [install.password]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    # Note that user-provided passwords questions are not automatically saved as setting
    help.en = "299ko administration password."
    help.fr = "Mot de passe d'administration de 299ko."
    type = "password"

[resources]
    # See the packaging documentation for the full set
    # of explanation regarding the behavior and properties for each of those

    [resources.sources]

        [resources.sources.main]
        # This will pre-fetch the asset which can then be deployed during the install/upgrade scripts with :
        #    ynh_setup_source --dest_dir="$install_dir"
        # You can also define other assets than "main" and add --source_id="foobar" in the previous command
        url = "https://github.com/299Ko/299ko/archive/refs/tags/v1.2.5.tar.gz"
        sha256 = "c005eecf2949de49558286f487405c2efbb54c187be634c6797fecbcd0b31e6a"

        # These infos are used by https://github.com/YunoHost/apps/blob/master/tools/autoupdate_app_sources/autoupdate_app_sources.py
        # to auto-update the previous asset urls and sha256sum + manifest version
        # assuming the upstream's code repo is on github and relies on tags or releases
        # See the 'sources' resource documentation for more details

        #autoupdate.strategy = "latest_github_tag"

    [resources.system_user]
    # This will provision/deprovision a unix system user

    [resources.install_dir]
    # This will create/remove the install dir as /var/www/$app
    # and store the corresponding setting $install_dir

    [resources.data_dir]
    # This will create/remove the data dir as /home/yunohost.app/$app
    # and store the corresponding setting $data_dir

    [resources.permissions]
    # This will configure SSOwat permission for $domain/$path/
    # The initial allowed group of user is configured via the init_main_permission question (public=visitors, private=all_users)
    main.url = "/"

    [resources.ports]
    # This will pick a random port for reverse-proxying and store it as the $port setting

    [resources.apt]
    # This will automatically install/uninstall the following apt packages
    # and implicitly define the $phpversion setting as 8.0 (if phpX.Y-foobar dependencies are listed)
    packages = "php8.2-gd"